@import "./mainTheme.less";

.minButtonBase { cursor:pointer; border:0px; transition: all 0.2s ease; }
.figureHeader { color: @foreground; font-weight:bold; font-size:30px; }
.arrowButton { color:white; background:transparent; .minButtonBase; }
.arrowButton.disabled { opacity: 0.4; cursor:none; }
.arrowPageNavText { font-size:16px; font-family: Consolas; color:white; .horiMargin(9px); }

.tight { margin:0px; padding:0px; }
.fullSize { .fullHeight; .fullWidth; }
.fullHeight { height:100%; }
.fullWidth { width:100%; }

.topLeft { display:flex; justify-content:flex-start; align-items: start; }
.topCenter { display:flex; justify-content:center; align-items: start; }
.topRight { display:flex; justify-content:flex-end; align-items: start; }
.middleRight { display:flex; justify-content:flex-end; align-items: center; }
.middleLeft { display:flex; justify-content:flex-start; align-items: center; }
.middleCenter { .center; }
.bottomLeft { display:flex; justify-content:flex-start; align-items: end; }
.bottomCenter { display:flex; justify-content:center; align-items: end; }
.bottomRight { display:flex; justify-content:flex-end; align-items: end; }

/* for Legacy */
.horizonalRight { display:flex; justify-content:flex-end; text-align: right; }
.horizonalLeft { display:flex; justify-content:flex-start; text-align: left; }
.verticallyTop { display:flex; align-items: flex-start; }
.verticallyCenter { display:flex; align-items: center; }
.verticallyBottom { display:flex; align-items: flex-end; }
.horizonalCenter { display:flex; justify-content: center; }

.center { display:flex; justify-content: center; align-items: center; }
.ellipsis { text-overflow: ellipsis; white-space: nowrap; display:block; overflow:hidden !important; }
.gridBase { display:grid; }

.size(@width, @height) { width:@width; height:@height; }
.horiMargin(@amount) { margin-left: @amount; margin-right: @amount; }
.horiPadding(@amount) { padding-left: @amount; padding-right: @amount; }
.squareSize(@size) { width:@size; height:@size; }
.circle(@size) { .squareSize(@size); border-radius: calc(@size / 2); }
.bg(@parameter) { background:@parameter;  }
.color(@parameter) { color: @parameter; }
.roundSquare(@size, @radius) { .squareSize(@size); border-radius: @radius; }
.debug { background:red; border:1px solid darkred; }
.noHighlight { user-select: none; -moz-user-select: none; -webkit-user-select: none; }
.clearInput { appearance: none; outline:none; }

/* To disable webkit engine's autofill style, see https://stackoverflow.com/questions/2781549/removing-input-background-colour-for-chrome-autocomplete */
input:-webkit-autofill, input:-webkit-autofill:focus { transition: background-color 600000s 0s, color 600000s 0s; }
input[data-autocompleted] { background-color: transparent !important; }